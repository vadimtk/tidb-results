cat mysql.cnf.j2 
{%- set public_host_ips = ansible_play_hosts | map('extract', hostvars, ['ansible_bond0_0', 'ipv4', 'address']) | list -%}
{%- set clusteraddr = hostvars[groups['all'][0]]['ansible_bond0_0']['ipv4']['address'] if inventory_hostname != groups['all'][0] else '' -%}
[mysqld]

datadir={{ mysqldir }}
socket=/tmp/mysql.sock
log-error=error.log

# general
  table_open_cache = 200000
  table_open_cache_instances=64
  back_log=3500
  max_connections=4000

# files
  innodb_file_per_table
  innodb_log_file_size=4G
  innodb_log_files_in_group=2
  innodb_open_files=4000

# buffers
  innodb_buffer_pool_size= 48G
  innodb_buffer_pool_instances=8
  innodb_log_buffer_size=64M

default_storage_engine=InnoDB
binlog_format=ROW

innodb_flush_log_at_trx_commit  = 1
innodb_flush_method             = O_DIRECT
innodb_file_per_table           = 1
innodb_autoinc_lock_mode=2
innodb_io_capacity=2000
innodb_io_capacity_max=4000


bind_address = 0.0.0.0

wsrep_slave_threads=2
wsrep_cluster_address=gcomm://

wsrep_node_address="{{ ansible_bond0_0.ipv4.address }}"
wsrep_cluster_name="{{ cluster_name }}"
wsrep_cluster_address=gcomm://{{ clusteraddr }}

# ansible_play_hosts[0] | map('extract', hostvars, ['ansible_eth0', 'ipv4', 'address'])|list|join(',') if inventory_hostname != ansible_play_hosts[0] else "" 


wsrep_provider=/usr/lib64/galera3/libgalera_smm.so

wsrep_sst_method=xtrabackup-v2
wsrep_sst_auth="root:"

[client]
socket=/tmp/mysql.sock
