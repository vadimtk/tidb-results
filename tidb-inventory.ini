# packet.net instance c2.medium.x86
# 
#Hardware Specs

#    CPU
#    24 Physical Cores @ 2.2 GHz
#    (1 x AMD EPYC 7401P)
#    Memory
#    64 GB of ECC RAM
#    Boot Drives
#    2 x 120 GB boot SSD
#    (One for the OS, another free to use)
#    Storage
#    960 GB of SSD
#    (2 x 480 GB)
#    Network
#    20 Gbps Bonded Network
#    (2 x Mellanox 10Gbps w/ LACP)


## TiDB Cluster Part
[tidb_servers]
10.99.239.15
10.99.239.17

[tikv_servers]
10.99.239.7
10.99.239.1
10.99.239.9

[pd_servers]
10.99.239.15
10.99.239.17
10.99.239.5

[spark_master]

[spark_slaves]

## Monitoring Part
# prometheus and pushgateway servers
[monitoring_servers]
10.99.239.1

[grafana_servers]
10.99.239.1

# node_exporter and blackbox_exporter servers
[monitored_servers]
10.99.239.7
10.99.239.1
10.99.239.9
10.99.239.15
10.99.239.17
10.99.239.5

[alertmanager_servers]

[kafka_exporter_servers]

## Binlog Part
[pump_servers:children]
tidb_servers

[drainer_servers]

## Group variables
[pd_servers:vars]
# location_labels = ["zone","rack","host"]

## Global variables
[all:vars]
deploy_dir = /data1

## Connection
# ssh via normal user
ansible_user = tidb

cluster_name = test-cluster

tidb_version = v2.0.4

# process supervision, [systemd, supervise]
process_supervision = systemd

# timezone of deployment region
timezone = Asia/Shanghai
set_timezone = True

enable_firewalld = False
# check NTP service
enable_ntpd = True
set_hostname = False
# CPU, memory and disk performance will not be checked when dev_mode = True
dev_mode = True

## binlog trigger
enable_binlog = False
# zookeeper address of kafka cluster for binlog, example:
# zookeeper_addrs = "192.168.0.11:2181,192.168.0.12:2181,192.168.0.13:2181"
zookeeper_addrs = ""
# kafka cluster address for monitoring, example:
# kafka_addrs = "192.168.0.11:9092,192.168.0.12:9092,192.168.0.13:9092"
kafka_addrs = ""

# store slow query log into seperate file
enable_slow_query_log = False

# enable TLS authentication in the TiDB cluster
enable_tls = False

# KV mode
deploy_without_tidb = False

# Optional: Set if you already have a alertmanager server.
# Format: alertmanager_host:alertmanager_port
alertmanager_target = ""

grafana_admin_user = "admin"
grafana_admin_password = "admin"


### Collect diagnosis
collect_log_recent_hours = 2

enable_bandwidth_limit = True
# default: 10Mb/s, unit: Kbit/s
collect_bandwidth_limit = 10000
